//System Calls

open(const char *path, int oflag, mode_t mode): It  should be as simple as it seems.
read(int fd, void *buf, size_t nbytes): You can use struct uios, and make use you understand it. You also can check out VOP_READ.
write(int fd, const void *buf, size_t nbytes): Involves I/O to userland. You can use struct uios again. Please check out VOP_WRITE.
lseek(int fd, off_t offset, int whence): Can we always perform an lseek? For example, can we perform lseek() beyond the end of a file? Please use VOP_TRYSEEK.
close(int fd): It may be interesting because of the refcounting issue (think about garbage collection)! 
dup2(int oldfd, int newfd): If newfd is already opened, close it. Upon successful completion, both file descriptors refer to the same file table object and share all properties of the object.
